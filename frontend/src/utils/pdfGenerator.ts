import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

interface UserData {
  title: string;
  image: string;
  body: string;
  tags: string[];
  createdBy: string;
  createdAt?: { seconds: number };
}

export const generateIDCard = async (userData: UserData): Promise<void> => {
  const pdf = new jsPDF({
    orientation: 'landscape',
    unit: 'mm',
    format: [85.6, 53.98]
  });

  pdf.setFillColor(124, 58, 237);
  pdf.rect(0, 0, 85.6, 15, 'F');

  pdf.setTextColor(255, 255, 255);
  pdf.setFontSize(16);
  pdf.text('CadastRAR', 42.8, 10, { align: 'center' });

  pdf.setTextColor(0, 0, 0);
  pdf.setFontSize(14);
  pdf.text(userData.title, 42.8, 25, { align: 'center' });

  pdf.setFontSize(9);
  pdf.text(`Tags: ${userData.tags.join(', ')}`, 42.8, 32, { align: 'center' });

  if (userData.createdAt) {
    const date = new Date(userData.createdAt.seconds * 1000).toLocaleDateString();
    pdf.setFontSize(7);
    pdf.text(`Registered: ${date}`, 42.8, 50, { align: 'center' });
  }

  pdf.save(`${userData.title}-ID-Card.pdf`);
};

export const generateCertificate = async (userData: UserData): Promise<void> => {
  const pdf = new jsPDF({
    orientation: 'landscape',
    unit: 'mm',
    format: 'a4'
  });

  pdf.setFillColor(124, 58, 237);
  pdf.rect(0, 0, 297, 20, 'F');

  pdf.setTextColor(255, 255, 255);
  pdf.setFontSize(24);
  pdf.text('CERTIFICATE OF REGISTRATION', 148.5, 13, { align: 'center' });

  pdf.setFillColor(240, 240, 240);
  pdf.rect(20, 30, 257, 160, 'F');

  pdf.setTextColor(0, 0, 0);
  pdf.setFontSize(18);
  pdf.text('This certifies that', 148.5, 60, { align: 'center' });

  pdf.setFontSize(28);
  pdf.setFont(undefined, 'bold');
  pdf.text(userData.title, 148.5, 80, { align: 'center' });

  pdf.setFont(undefined, 'normal');
  pdf.setFontSize(14);
  pdf.text('has been successfully registered in the CadastRAR system', 148.5, 95, { align: 'center' });

  if (userData.tags.length > 0) {
    pdf.setFontSize(12);
    pdf.text(`Specializations: ${userData.tags.join(', ')}`, 148.5, 110, { align: 'center' });
  }

  const splitDescription = pdf.splitTextToSize(userData.body, 220);
  pdf.setFontSize(10);
  pdf.text(splitDescription, 148.5, 130, { align: 'center', maxWidth: 220 });

  if (userData.createdAt) {
    const date = new Date(userData.createdAt.seconds * 1000).toLocaleDateString();
    pdf.setFontSize(11);
    pdf.text(`Date: ${date}`, 148.5, 170, { align: 'center' });
  }

  pdf.setFontSize(9);
  pdf.text('Generated by CadastRAR', 148.5, 200, { align: 'center' });

  pdf.save(`${userData.title}-Certificate.pdf`);
};

export const generateProfileSheet = async (userData: UserData): Promise<void> => {
  const pdf = new jsPDF();

  pdf.setFillColor(124, 58, 237);
  pdf.rect(0, 0, 210, 30, 'F');

  pdf.setTextColor(255, 255, 255);
  pdf.setFontSize(22);
  pdf.text('User Profile', 105, 20, { align: 'center' });

  pdf.setTextColor(0, 0, 0);
  pdf.setFontSize(18);
  pdf.setFont(undefined, 'bold');
  pdf.text(userData.title, 20, 50);

  pdf.setFont(undefined, 'normal');
  pdf.setFontSize(12);
  pdf.text('Description:', 20, 65);

  const splitBody = pdf.splitTextToSize(userData.body, 170);
  pdf.setFontSize(11);
  pdf.text(splitBody, 20, 75);

  const bodyHeight = splitBody.length * 5;

  pdf.setFontSize(12);
  pdf.setFont(undefined, 'bold');
  pdf.text('Tags:', 20, 85 + bodyHeight);

  pdf.setFont(undefined, 'normal');
  pdf.setFontSize(11);
  userData.tags.forEach((tag, index) => {
    pdf.text(`â€¢ ${tag}`, 25, 95 + bodyHeight + (index * 6));
  });

  const tagsHeight = userData.tags.length * 6;

  pdf.setFontSize(12);
  pdf.setFont(undefined, 'bold');
  pdf.text('Registration Details:', 20, 110 + bodyHeight + tagsHeight);

  pdf.setFont(undefined, 'normal');
  pdf.setFontSize(11);
  pdf.text(`Created by: ${userData.createdBy}`, 20, 120 + bodyHeight + tagsHeight);

  if (userData.createdAt) {
    const date = new Date(userData.createdAt.seconds * 1000).toLocaleDateString();
    pdf.text(`Registration Date: ${date}`, 20, 128 + bodyHeight + tagsHeight);
  }

  pdf.setFillColor(240, 240, 240);
  pdf.rect(0, 280, 210, 17, 'F');
  pdf.setFontSize(9);
  pdf.setTextColor(100, 100, 100);
  pdf.text('Generated by CadastRAR - User Management System', 105, 290, { align: 'center' });

  pdf.save(`${userData.title}-Profile.pdf`);
};
